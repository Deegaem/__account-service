version: '3.8'
services:
  account-db:
    image: postgres
    container_name: account-db-container
    expose:
      - 5432
    environment:
      POSTGRES_USER: app-account
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: account
    volumes:
      - account-db-data:/var/lib/postgresql/data
    networks:
      - account-network
  account-backend:
    build:
      context: .
    container_name: account-backend-container
#    restart: on-failure
    ports:
      - 8081:8080
    environment:
      server.port: 8080
      spring.application.name: account-service
      spring.profiles.active: dev
      spring.cloud.config.discovery.enabled: true
      spring.cloud.config.discovery.serviceId: bf-config-server
      spring.cloud.config.fail-fast: true
      spring.cloud.config.retry.initialInterval: 3000
      spring.cloud.config.retry.multiplier: 1.3
      spring.cloud.config.retry.maxInterval: 10000
      spring.cloud.config.retry.maxAttempts: 20
      eureka.client.enabled: true
      eureka.client.register-with-eureka: true
      eureka.client.fetch-registry: true
      eureka.client.serviceUrl.defaultZone: http://bf-registry:8761/eureka
      eureka.instance.metadata-map.configPath: /config
      management.endpoints.web.exposure.include: health, info, prometheus
      management.metrics.tags.application: account-service
      management.tracing.enabled: true
      management.tracing.sampling.probability: 1.0
      management.zipkin.tracing.endpoint: http://tempo:9411
    networks:
      - account-network
      - bf-network
    depends_on:
      - account-db

networks:
  account-network:
    driver: bridge
  bf-network:
    external: true
volumes:
  account-db-data: