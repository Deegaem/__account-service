plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'org.deegaem'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '19'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap:4.1.4'
	implementation 'io.micrometer:micrometer-registry-prometheus'
	implementation 'com.github.loki4j:loki-logback-appender:1.5.1'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'io.projectreactor:reactor-core-micrometer'
	implementation 'io.micrometer:micrometer-tracing-bridge-brave'
	implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
	//implementation 'io.micrometer:micrometer-tracing-bridge-otel:1.3.1'
	//implementation 'io.opentelemetry:opentelemetry-exporter-zipkin:1.40.0'
	implementation 'io.r2dbc:r2dbc-proxy:1.1.5.RELEASE'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:4.1.4'
	implementation 'org.springframework.cloud:spring-cloud-config-client:4.0.5'
	implementation 'org.springframework.boot:spring-boot-starter-aop:3.2.5'
	implementation 'org.springframework.retry:spring-retry:2.0.5'

	//implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.17.0'
	//implementation 'ch.qos.logback.contrib:logback-json-classic:0.1.5'
	//implementation 'ch.qos.logback.contrib:logback-jackson:0.1.5'




	//implementation 'io.r2dbc:r2dbc-pool:1.0.0.RELEASE'
//	implementation group: 'org.springframework.boot', name: 'spring-boot-docker-compose', version: '3.1.1'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	runtimeOnly 'org.postgresql:r2dbc-postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
}

tasks.named('test') {
	useJUnitPlatform()
}
